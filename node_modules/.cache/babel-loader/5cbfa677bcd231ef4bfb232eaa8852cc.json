{"ast":null,"code":"import _regeneratorRuntime from\"D:/psyDoge/untitled folder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/psyDoge/untitled folder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/psyDoge/untitled folder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import logo from'../assets/logo.png';import Web3 from'web3';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Header(){var accountAd;var _useState=useState(\"Connect Wallet\"),_useState2=_slicedToArray(_useState,2),account=_useState2[0],setAccount=_useState2[1];var accounts;var getAccounts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var web3;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:web3=window.web3;_context.prev=1;_context.next=4;return web3.eth.getAccounts();case 4:accounts=_context.sent;return _context.abrupt(\"return\",accounts);case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);console.log(\"Error while fetching acounts: \",_context.t0);return _context.abrupt(\"return\",null);case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function getAccounts(){return _ref.apply(this,arguments);};}();var loadWeb3=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var isConnected,_accounts,acc;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:isConnected=false;_context2.prev=1;if(!window.ethereum){_context2.next=9;break;}window.web3=new Web3(window.ethereum);_context2.next=6;return window.ethereum.enable();case 6:isConnected=true;_context2.next=10;break;case 9:if(window.web3){window.web3=new Web3(window.web3.currentProvider);isConnected=true;}else{isConnected=false;console.log(\"Metamask is not installed, please install it on your browser to connect.\");}case 10:if(!(isConnected===true)){_context2.next=18;break;}_context2.next=13;return getAccounts();case 13:_accounts=_context2.sent;accountAd=_accounts[0];accountAd=_accounts[0];acc=accountAd.substring(0,4)+\"...\"+accountAd.substring(accountAd.length-4);setAccount(acc);case 18:_context2.next=23;break;case 20:_context2.prev=20;_context2.t0=_context2[\"catch\"](1);console.log(\"Error while connecting metamask\",_context2.t0);case 23:case\"end\":return _context2.stop();}}},_callee2,null,[[1,20]]);}));return function loadWeb3(){return _ref2.apply(this,arguments);};}();useEffect(function(){setInterval(function(){loadWeb3();},1000);});return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-row justify-between h-18 py-4 bg-header none px-6 md:px-10 lg:px-14\",children:[/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"logo\"}),/*#__PURE__*/_jsx(\"button\",{className:\"bg-main-color px-3 rounded\",children:account})]});}export default Header;","map":{"version":3,"sources":["D:/psyDoge/untitled folder/src/components/Header.js"],"names":["React","useState","useEffect","logo","Web3","Header","accountAd","account","setAccount","accounts","getAccounts","web3","window","eth","console","log","loadWeb3","isConnected","ethereum","enable","currentProvider","acc","substring","length","setInterval"],"mappings":"gbAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,C,wFAEA,QAASC,CAAAA,MAAT,EAAkB,CAChB,GAAIC,CAAAA,SAAJ,CACA,cAA8BL,QAAQ,CAAC,gBAAD,CAAtC,wCAAOM,OAAP,eAAgBC,UAAhB,eAEA,GAAIC,CAAAA,QAAJ,CACA,GAAMC,CAAAA,WAAW,0FAAG,4IACZC,IADY,CACLC,MAAM,CAACD,IADF,uCAGCA,CAAAA,IAAI,CAACE,GAAL,CAASH,WAAT,EAHD,QAGhBD,QAHgB,+CAITA,QAJS,0DAMhBK,OAAO,CAACC,GAAR,CAAY,gCAAZ,cANgB,gCAOT,IAPS,sEAAH,kBAAXL,CAAAA,WAAW,0CAAjB,CAWA,GAAMM,CAAAA,QAAQ,2FAAG,sKACXC,WADW,CACG,KADH,sBAGTL,MAAM,CAACM,QAHE,0BAIXN,MAAM,CAACD,IAAP,CAAc,GAAIP,CAAAA,IAAJ,CAASQ,MAAM,CAACM,QAAhB,CAAd,CAJW,uBAKLN,CAAAA,MAAM,CAACM,QAAP,CAAgBC,MAAhB,EALK,QAMXF,WAAW,CAAG,IAAd,CANW,+BAON,GAAIL,MAAM,CAACD,IAAX,CAAiB,CACtBC,MAAM,CAACD,IAAP,CAAc,GAAIP,CAAAA,IAAJ,CAASQ,MAAM,CAACD,IAAP,CAAYS,eAArB,CAAd,CACAH,WAAW,CAAG,IAAd,CACD,CAHM,IAGA,CACLA,WAAW,CAAG,KAAd,CACAH,OAAO,CAACC,GAAR,CAAY,0EAAZ,EACD,CAbY,aAcTE,WAAW,GAAK,IAdP,oDAeUP,CAAAA,WAAW,EAfrB,SAePD,SAfO,gBAgBXH,SAAS,CAAGG,SAAQ,CAAC,CAAD,CAApB,CACAH,SAAS,CAAGG,SAAQ,CAAC,CAAD,CAApB,CACIY,GAlBO,CAkBDf,SAAS,CAACgB,SAAV,CAAoB,CAApB,CAAuB,CAAvB,EAA4B,KAA5B,CAAoChB,SAAS,CAACgB,SAAV,CAAoBhB,SAAS,CAACiB,MAAV,CAAmB,CAAvC,CAlBnC,CAmBXf,UAAU,CAACa,GAAD,CAAV,CAnBW,6FAuBbP,OAAO,CAACC,GAAR,CAAY,iCAAZ,eAvBa,uEAAH,kBAARC,CAAAA,QAAQ,2CAAd,CA2BAd,SAAS,CAAC,UAAM,CACdsB,WAAW,CAAC,UAAM,CAChBR,QAAQ,GACT,CAFU,CAER,IAFQ,CAAX,CAGD,CAJQ,CAAT,CAOA,mBACE,aAAK,SAAS,CAAC,+EAAf,wBACE,YAAK,GAAG,CAAEb,IAAV,CAAgB,GAAG,CAAC,MAApB,EADF,cAEE,eAAQ,SAAS,CAAC,4BAAlB,UAAgDI,OAAhD,EAFF,GADF,CAMD,CAED,cAAeF,CAAAA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport logo from '../assets/logo.png'\nimport Web3 from 'web3'\n\nfunction Header() {\n  let accountAd;\n  const [account, setAccount] = useState(\"Connect Wallet\");\n\n  let accounts;\n  const getAccounts = async () => {\n    const web3 = window.web3;\n    try {\n      accounts = await web3.eth.getAccounts();\n      return accounts;\n    } catch (error) {\n      console.log(\"Error while fetching acounts: \", error);\n      return null;\n    }\n  };\n\n  const loadWeb3 = async () => {\n    let isConnected = false;\n    try {\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n        isConnected = true;\n      } else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider);\n        isConnected = true;\n      } else {\n        isConnected = false;\n        console.log(\"Metamask is not installed, please install it on your browser to connect.\");\n      }\n      if (isConnected === true) {\n        let accounts = await getAccounts();\n        accountAd = accounts[0];\n        accountAd = accounts[0];\n        let acc = accountAd.substring(0, 4) + \"...\" + accountAd.substring(accountAd.length - 4)\n        setAccount(acc);\n\n      }\n    } catch (error) {\n      console.log(\"Error while connecting metamask\", error);\n    }\n  };\n\n  useEffect(() => {\n    setInterval(() => {\n      loadWeb3();\n    }, 1000);\n  });\n\n\n  return (\n    <div className=\"flex flex-row justify-between h-18 py-4 bg-header none px-6 md:px-10 lg:px-14\">\n      <img src={logo} alt=\"logo\" />\n      <button className=\"bg-main-color px-3 rounded\">{account}</button>\n    </div>\n  )\n}\n\nexport default Header\n"]},"metadata":{},"sourceType":"module"}