{"ast":null,"code":"var _jsxFileName = \"D:\\\\psyDoge\\\\untitled folder\\\\src\\\\components\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport logo from '../assets/logo.png';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Header() {\n  _s();\n\n  let accountAd;\n  const [account, setAccount] = useState(\"Connect Wallet\");\n  let accounts;\n\n  const getAccounts = async () => {\n    const web3 = window.web3;\n\n    try {\n      accounts = await web3.eth.getAccounts();\n      return accounts;\n    } catch (error) {\n      console.log(\"Error while fetching acounts: \", error);\n      return null;\n    }\n  };\n\n  const loadWeb3 = async () => {\n    let isConnected = false;\n\n    try {\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n        isConnected = true;\n      } else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider);\n        isConnected = true;\n      } else {\n        isConnected = false;\n        console.log(\"Metamask is not installed, please install it on your browser to connect.\");\n      }\n\n      if (isConnected === true) {\n        let accounts = await getAccounts();\n        accountAd = accounts[0];\n        accountAd = accounts[0];\n        let acc = accountAd.substring(0, 4) + \"...\" + accountAd.substring(accountAd.length - 4);\n        setAccount(acc);\n      }\n    } catch (error) {\n      console.log(\"Error while connecting metamask\", error);\n    }\n  };\n\n  useEffect(() => {\n    setInterval(() => {\n      loadWeb3();\n    }, 1000);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-row justify-between h-18 py-4 bg-header none px-6 md:px-10 lg:px-14\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-main-color px-3 rounded\",\n      children: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"xudSD6IGUEIJ6SoAXcRIlv+IaWM=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["D:/psyDoge/untitled folder/src/components/Header.js"],"names":["React","useState","useEffect","logo","Web3","Header","accountAd","account","setAccount","accounts","getAccounts","web3","window","eth","error","console","log","loadWeb3","isConnected","ethereum","enable","currentProvider","acc","substring","length","setInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,MAAIC,SAAJ;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,gBAAD,CAAtC;AAEA,MAAIQ,QAAJ;;AACA,QAAMC,WAAW,GAAG,YAAY;AAC9B,UAAMC,IAAI,GAAGC,MAAM,CAACD,IAApB;;AACA,QAAI;AACFF,MAAAA,QAAQ,GAAG,MAAME,IAAI,CAACE,GAAL,CAASH,WAAT,EAAjB;AACA,aAAOD,QAAP;AACD,KAHD,CAGE,OAAOK,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CF,KAA9C;AACA,aAAO,IAAP;AACD;AACF,GATD;;AAWA,QAAMG,QAAQ,GAAG,YAAY;AAC3B,QAAIC,WAAW,GAAG,KAAlB;;AACA,QAAI;AACF,UAAIN,MAAM,CAACO,QAAX,EAAqB;AACnBP,QAAAA,MAAM,CAACD,IAAP,GAAc,IAAIP,IAAJ,CAASQ,MAAM,CAACO,QAAhB,CAAd;AACA,cAAMP,MAAM,CAACO,QAAP,CAAgBC,MAAhB,EAAN;AACAF,QAAAA,WAAW,GAAG,IAAd;AACD,OAJD,MAIO,IAAIN,MAAM,CAACD,IAAX,EAAiB;AACtBC,QAAAA,MAAM,CAACD,IAAP,GAAc,IAAIP,IAAJ,CAASQ,MAAM,CAACD,IAAP,CAAYU,eAArB,CAAd;AACAH,QAAAA,WAAW,GAAG,IAAd;AACD,OAHM,MAGA;AACLA,QAAAA,WAAW,GAAG,KAAd;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,0EAAZ;AACD;;AACD,UAAIE,WAAW,KAAK,IAApB,EAA0B;AACxB,YAAIT,QAAQ,GAAG,MAAMC,WAAW,EAAhC;AACAJ,QAAAA,SAAS,GAAGG,QAAQ,CAAC,CAAD,CAApB;AACAH,QAAAA,SAAS,GAAGG,QAAQ,CAAC,CAAD,CAApB;AACA,YAAIa,GAAG,GAAGhB,SAAS,CAACiB,SAAV,CAAoB,CAApB,EAAuB,CAAvB,IAA4B,KAA5B,GAAoCjB,SAAS,CAACiB,SAAV,CAAoBjB,SAAS,CAACkB,MAAV,GAAmB,CAAvC,CAA9C;AACAhB,QAAAA,UAAU,CAACc,GAAD,CAAV;AAED;AACF,KApBD,CAoBE,OAAOR,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,KAA/C;AACD;AACF,GAzBD;;AA2BAZ,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,WAAW,CAAC,MAAM;AAChBR,MAAAA,QAAQ;AACT,KAFU,EAER,IAFQ,CAAX;AAGD,GAJQ,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,+EAAf;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEd,IAAV;AAAgB,MAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,SAAS,EAAC,4BAAlB;AAAA,gBAAgDI;AAAhD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAxDQF,M;;KAAAA,M;AA0DT,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport logo from '../assets/logo.png'\nimport Web3 from 'web3'\n\nfunction Header() {\n  let accountAd;\n  const [account, setAccount] = useState(\"Connect Wallet\");\n\n  let accounts;\n  const getAccounts = async () => {\n    const web3 = window.web3;\n    try {\n      accounts = await web3.eth.getAccounts();\n      return accounts;\n    } catch (error) {\n      console.log(\"Error while fetching acounts: \", error);\n      return null;\n    }\n  };\n\n  const loadWeb3 = async () => {\n    let isConnected = false;\n    try {\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n        isConnected = true;\n      } else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider);\n        isConnected = true;\n      } else {\n        isConnected = false;\n        console.log(\"Metamask is not installed, please install it on your browser to connect.\");\n      }\n      if (isConnected === true) {\n        let accounts = await getAccounts();\n        accountAd = accounts[0];\n        accountAd = accounts[0];\n        let acc = accountAd.substring(0, 4) + \"...\" + accountAd.substring(accountAd.length - 4)\n        setAccount(acc);\n\n      }\n    } catch (error) {\n      console.log(\"Error while connecting metamask\", error);\n    }\n  };\n\n  useEffect(() => {\n    setInterval(() => {\n      loadWeb3();\n    }, 1000);\n  });\n\n\n  return (\n    <div className=\"flex flex-row justify-between h-18 py-4 bg-header none px-6 md:px-10 lg:px-14\">\n      <img src={logo} alt=\"logo\" />\n      <button className=\"bg-main-color px-3 rounded\">{account}</button>\n    </div>\n  )\n}\n\nexport default Header\n"]},"metadata":{},"sourceType":"module"}